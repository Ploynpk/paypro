{"ast":null,"code":"var _jsxFileName = \"/Users/ploy/Desktop/paypro/src/client/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport logo from '../img/logo3.png';\n//./client/img/logo3.png\nimport axios from 'axios';\n\n// function for new user to signup\n// it will render on the webpage \n// 1. img/logo\n// 2. form that could pass in username and password //   <form method='POST' action='/signup'>\n// 3. make sure to store them into database that can access later in json?\n// 4. button that will be triggle the page to redirect to the main page\n// 5. add log in option\n\n// need a function for onSubmitting (commit signup button)\n// check if the username has been existed in the database?\n// pass to userController to check user from the database\n// has to be unique name\n\n// then onSubmit={}  pass into form // button <button type=\"submit\" className=\"btn\">Sign Up</button>\n// fetch req POST method to this endpoint http://localhost:3001/signup/\n\n// state handle\n// post req to mongoDB\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/login');\n      console.log(response.data);\n    } catch (err) {\n      console.error('Error fetching username and password', err);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchData();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      id: \"main-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      action: \"/\",\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n_s(Login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","logo","axios","jsxDEV","_jsxDEV","Login","_s","fetchData","response","get","console","log","data","err","error","handleSubmit","e","preventDefault","className","children","src","alt","id","fileName","_jsxFileName","lineNumber","columnNumber","method","onSubmit","action","name","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/ploy/Desktop/paypro/src/client/components/Login.jsx"],"sourcesContent":["import React , { useEffect } from 'react';\nimport logo from '../img/logo3.png';\n//./client/img/logo3.png\nimport axios from 'axios';\n\n// function for new user to signup\n// it will render on the webpage \n// 1. img/logo\n// 2. form that could pass in username and password //   <form method='POST' action='/signup'>\n// 3. make sure to store them into database that can access later in json?\n// 4. button that will be triggle the page to redirect to the main page\n// 5. add log in option\n\n\n// need a function for onSubmitting (commit signup button)\n// check if the username has been existed in the database?\n// pass to userController to check user from the database\n// has to be unique name\n\n// then onSubmit={}  pass into form // button <button type=\"submit\" className=\"btn\">Sign Up</button>\n// fetch req POST method to this endpoint http://localhost:3001/signup/\n\n\n// state handle\n// post req to mongoDB\n\nconst Login = () => {\n\n  const fetchData = async () => {\n    \n      try {\n          const response = await axios.get('http://localhost:3001/login');\n          console.log(response.data);\n      } catch (err) {\n          console.error('Error fetching username and password', err);\n      }\n  };\n\n  useEffect(() => {\n      fetchData();\n  }, []);\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      fetchData();\n  };\n\n  return (\n      <div className='signup-container'>\n          <img src={logo} alt='logo' id='main-logo' />\n          <form method='POST' onSubmit={handleSubmit} action='/' className='signup-form'>\n              <input name='username' type='text' placeholder='username'></input>\n              <input name='password' type='password' placeholder='password'></input>\n              <button type=\"submit\" className=\"btn\">Log In</button>\n          </form>\n      </div>\n  );\n};\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,SAAS,QAAQ,OAAO;AACzC,OAAOC,IAAI,MAAM,kBAAkB;AACnC;AACA,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAE1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,6BAA6B,CAAC;MAC/DC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVH,OAAO,CAACI,KAAK,CAAC,sCAAsC,EAAED,GAAG,CAAC;IAC9D;EACJ,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZO,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBV,SAAS,CAAC,CAAC;EACf,CAAC;EAED,oBACIH,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7Bf,OAAA;MAAKgB,GAAG,EAAEnB,IAAK;MAACoB,GAAG,EAAC,MAAM;MAACC,EAAE,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CtB,OAAA;MAAMuB,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEb,YAAa;MAACc,MAAM,EAAC,GAAG;MAACX,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1Ef,OAAA;QAAO0B,IAAI,EAAC,UAAU;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAU;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClEtB,OAAA;QAAO0B,IAAI,EAAC,UAAU;QAACC,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC;MAAU;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtEtB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAACb,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEZ,CAAC;AAACpB,EAAA,CA/BID,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}