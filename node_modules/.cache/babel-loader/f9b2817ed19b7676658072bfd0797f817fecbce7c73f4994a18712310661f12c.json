{"ast":null,"code":"var _jsxFileName = \"/Users/ploy/Desktop/paypro/src/client/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from '../img/logo3.png';\n//./client/img/logo3.png\n//import axios from 'axios';\n// import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\n// function for new user to signup\n// it will render on the webpage \n// 1. img/logo\n// 2. form that could pass in username and password //   <form method='POST' action='/signup'>\n// 3. make sure to store them into database that can access later in json?\n// 4. button that will be triggle the page to redirect to the main page\n// 5. add log in option\n\n// need a function for onSubmitting (commit signup button)\n// check if the username has been existed in the database?\n// pass to userController to check user from the database\n// has to be unique name\n\n// then onSubmit={}  pass into form // button <button type=\"submit\" className=\"btn\">Sign Up</button>\n// fetch req POST method to this endpoint http://localhost:3001/signup/\n\n// state handle\n// post req to mongoDB\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n  // const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n      console.log(data); // ตรวจสอบข้อมูลที่ได้รับจากเซิร์ฟเวอร์\n\n      // ทำตามขั้นตอนต่อไป เช่น บันทึก token ใน localStorage หรือ Redux store และเปลี่ยนเส้นทางหน้าเว็บไปยังหน้าหลัก\n      navigate('/');\n    } catch (error) {\n      console.error('Error fetching username and password', error);\n      // แสดงข้อความผิดพลาดหรือกระตุกไปยังผู้ใช้\n      setError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      id: \"main-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      onSubmit: handleLogin,\n      action: \"/\",\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Wrong username or password! Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n};\n_s(Login, \"qQM5zEnh6Lj8USgYsp85KUQatxE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","logo","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","className","children","src","alt","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","action","name","type","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/ploy/Desktop/paypro/src/client/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport logo from '../img/logo3.png';\n//./client/img/logo3.png\n//import axios from 'axios';\n// import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\n\n// function for new user to signup\n// it will render on the webpage \n// 1. img/logo\n// 2. form that could pass in username and password //   <form method='POST' action='/signup'>\n// 3. make sure to store them into database that can access later in json?\n// 4. button that will be triggle the page to redirect to the main page\n// 5. add log in option\n\n\n// need a function for onSubmitting (commit signup button)\n// check if the username has been existed in the database?\n// pass to userController to check user from the database\n// has to be unique name\n\n// then onSubmit={}  pass into form // button <button type=\"submit\" className=\"btn\">Sign Up</button>\n// fetch req POST method to this endpoint http://localhost:3001/signup/\n\n\n// state handle\n// post req to mongoDB\n\nconst Login = () => {\n\n    const [username , setUsername] = useState('');\n    const [password , setPassword] = useState('')\n    const [error , setError] = useState(false);\n    // const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n          const response = await fetch('http://localhost:3001/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, password }),\n          });\n      \n          if (!response.ok) {\n            throw new Error('Login failed');\n          }\n      \n          const data = await response.json();\n          console.log(data); // ตรวจสอบข้อมูลที่ได้รับจากเซิร์ฟเวอร์\n      \n          // ทำตามขั้นตอนต่อไป เช่น บันทึก token ใน localStorage หรือ Redux store และเปลี่ยนเส้นทางหน้าเว็บไปยังหน้าหลัก\n          navigate('/');\n        } catch (error) {\n          console.error('Error fetching username and password', error);\n          // แสดงข้อความผิดพลาดหรือกระตุกไปยังผู้ใช้\n          setError(true);\n        }\n      };\n\n\n  return (\n      <div className='signup-container'>\n          <img src={logo} alt='logo' id='main-logo' />\n          <form method='POST' onSubmit={handleLogin} action='/' className='signup-form'>\n              <input name='username' type='text' placeholder='username' onChange={(e) => setUsername(e.target.value)}></input>\n              <input name='password' type='password' placeholder='password' onChange={(e) => setPassword(e.target.value)}></input>\n              <button type=\"submit\" className=\"btn\">Log In</button>\n          </form>\n          {\n            error && <div className='error'>\n                Wrong username or password! Please try again.\n                </div>\n          }\n      </div>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}