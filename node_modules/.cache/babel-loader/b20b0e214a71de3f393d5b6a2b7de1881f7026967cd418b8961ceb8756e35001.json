{"ast":null,"code":"var _jsxFileName = \"/Users/ploy/Desktop/paypro/src/client/components/Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from '../img/logo3.png';\n//./client/img/logo3.png\nimport axios from 'axios';\n\n// function for new user to signup\n// it will render on the webpage \n// 1. img/logo\n// 2. form that could pass in username and password //   <form method='POST' action='/signup'>\n// 3. make sure to store them into database that can access later in json?\n// 4. button that will be triggle the page to redirect to the main page\n// 5. add log in option\n\n// need a function for onSubmitting (commit signup button)\n// check if the username has been existed in the database?\n// pass to userController to check user from the database\n// has to be unique name\n\n// then onSubmit={}  pass into form // button <button type=\"submit\" className=\"btn\">Sign Up</button>\n// fetch req POST method to this endpoint http://localhost:3001/signup/\n\n// state handle\n// post req to mongoDB\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/signup', {\n        username,\n        password\n      });\n      response.redirect();\n    } catch (err) {\n      console.error('Error signing up', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      id: \"main-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        placeholder: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(Signup, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","logo","axios","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","response","post","redirect","err","console","error","className","children","src","alt","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","name","type","placeholder","value","onChange","target","href","_c","$RefreshReg$"],"sources":["/Users/ploy/Desktop/paypro/src/client/components/Signup.jsx"],"sourcesContent":["import React , { useState } from 'react';\nimport logo from '../img/logo3.png';\n//./client/img/logo3.png\nimport axios from 'axios';\n\n// function for new user to signup\n// it will render on the webpage \n// 1. img/logo\n// 2. form that could pass in username and password //   <form method='POST' action='/signup'>\n// 3. make sure to store them into database that can access later in json?\n// 4. button that will be triggle the page to redirect to the main page\n// 5. add log in option\n\n\n// need a function for onSubmitting (commit signup button)\n// check if the username has been existed in the database?\n// pass to userController to check user from the database\n// has to be unique name\n\n// then onSubmit={}  pass into form // button <button type=\"submit\" className=\"btn\">Sign Up</button>\n// fetch req POST method to this endpoint http://localhost:3001/signup/\n\n\n// state handle\n// post req to mongoDB\n\nconst Signup = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n      e.preventDefault();\n      try {\n          const response = await axios.post('http://localhost:3001/signup', { username, password });\n          response.redirect()\n\n      } catch (err) {\n          console.error('Error signing up', err);\n      }\n  };\n\n  return (\n      <div className='signup-container'>\n          <img src={logo} alt='logo' id='main-logo' />\n          <form onSubmit={handleSubmit} className='signup-form'>\n              <input name='username' type='text' placeholder='username' value={username} onChange={(e) => setUsername(e.target.value)}></input>\n              <input name='password' type='password' value={password} placeholder='password' onChange={(e) => setPassword(e.target.value)}></input>\n              <button type=\"submit\" className=\"btn\">Sign Up</button>\n          </form>\n          <p>Already have an account? <a href=\"/login\">Log in</a></p>\n      </div>\n  );\n};\n\n\nexport default Signup;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}