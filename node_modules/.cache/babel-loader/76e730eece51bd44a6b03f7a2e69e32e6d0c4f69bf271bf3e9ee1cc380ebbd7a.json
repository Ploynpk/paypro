{"ast":null,"code":"var _jsxFileName = \"/Users/ploy/Desktop/paypro/src/client/components/Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from '../img/logo3.png';\nimport { Link, useNavigate } from 'react-router-dom';\n\n// function for new user to signup\n// it will render on the webpage \n// 1. img/logo\n// 2. form that could pass in username and password //   <form method='POST' action='/signup'>\n// 3. make sure to store them into database that can access later in json?\n// 4. button that will be triggle the page to redirect to the main page\n// 5. add log in option\n\n// need a function for onSubmitting (commit signup button)\n// check if the username has been existed in the database?\n// pass to userController to check user from the database\n// has to be unique name\n\n// then onSubmit={}  pass into form // button <button type=\"submit\" className=\"btn\">Sign Up</button>\n// fetch req POST method to this endpoint http://localhost:3001/signup/\n\n// state handle\n// post req to mongoDB\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSignup = async e => {\n    e.preventDefault();\n    try {\n      // endpoint /signup\n      const res = await fetch('http://localhost:3001/signup', {\n        // send headers\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // post method req\n        method: 'POST',\n        // body will be json? passing in username and password\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      // 'user created successfully is not json'\n      // await res.json()\n      res.text();\n      console.log('res.text() --> ', res.text());\n      console.log('res.json() --> ', res.json());\n      // dispatch(login(data)) // info , token\n\n      // usenavigate to change the route\n      navigate('/expense');\n    } catch (err) {\n      console.error('Error fetching username and password', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      id: \"main-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignup,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        placeholder: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n_s(Signup, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","logo","Link","useNavigate","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","password","setPassword","navigate","handleSignup","e","preventDefault","res","fetch","headers","method","body","JSON","stringify","text","console","log","json","err","error","className","children","src","alt","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","name","type","placeholder","value","onChange","target","to","_c","$RefreshReg$"],"sources":["/Users/ploy/Desktop/paypro/src/client/components/Signup.jsx"],"sourcesContent":["import React , { useState } from 'react';\nimport logo from '../img/logo3.png';\nimport { Link , useNavigate } from 'react-router-dom';\n\n// function for new user to signup\n// it will render on the webpage \n// 1. img/logo\n// 2. form that could pass in username and password //   <form method='POST' action='/signup'>\n// 3. make sure to store them into database that can access later in json?\n// 4. button that will be triggle the page to redirect to the main page\n// 5. add log in option\n\n\n// need a function for onSubmitting (commit signup button)\n// check if the username has been existed in the database?\n// pass to userController to check user from the database\n// has to be unique name\n\n// then onSubmit={}  pass into form // button <button type=\"submit\" className=\"btn\">Sign Up</button>\n// fetch req POST method to this endpoint http://localhost:3001/signup/\n\n\n// state handle\n// post req to mongoDB\n\nconst Signup = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    try {\n        // endpoint /signup\n        const res = await fetch('http://localhost:3001/signup' , {\n            // send headers\n          headers: {\n              'Content-Type' : 'application/json'\n          },\n          // post method req\n          method: 'POST',\n          // body will be json? passing in username and password\n          body: JSON.stringify({username , password})\n        });\n        // 'user created successfully is not json'\n        // await res.json()\n        res.text()\n        console.log('res.text() --> ' ,  res.text());\n        console.log('res.json() --> ' , res.json());\n        // dispatch(login(data)) // info , token\n\n        // usenavigate to change the route\n        navigate('/expense')\n\n    } catch (err) {\n        console.error('Error fetching username and password', err);\n    }\n};\n\n  return (\n      <div className='signup-container'>\n          <img src={logo} alt='logo' id='main-logo' />\n          <form onSubmit={handleSignup} className='signup-form'>\n              <input name='username' type='text' placeholder='username' value={username} onChange={(e) => setUsername(e.target.value)}></input>\n              <input name='password' type='password' value={password} placeholder='password' onChange={(e) => setPassword(e.target.value)}></input>\n              <button type=\"submit\" className=\"btn\">Sign Up</button>\n          </form>\n          <p>Already have an account? <Link to=\"/login\">Log in</Link></p>\n      </div>\n  );\n};\n\n\nexport default Signup;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}